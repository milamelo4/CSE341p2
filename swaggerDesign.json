{
  "swagger": "2.0",
  "info": {
    "title": "Users API",
    "description": "API documentation for the users API",
    "version": "1.0.0"
  },
  "host": "https://cse341p2-mokj.onrender.com",
  "basePath": "/",
  "schemes": ["https"],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Authorization header using the Bearer scheme. Example: 'Bearer {token}'"
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/users/": {
      "get": {
        "description": "Retrieve all users",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/User" }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Retrieve a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/definitions/User" }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Update an existing user (email cannot be updated)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be updated (email cannot be changed)",
            "required": true,
            "schema": { "$ref": "#/definitions/UserUpdate" }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": { "description": "No Content" },
          "400": { "description": "Bad Request - Invalid User ID format" },
          "404": { "description": "Not Found - User does not exist" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "delete": {
        "description": "Delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": { "description": "OK" },
          "404": { "description": "Not Found" },
          "500": { "description": "Internal Server Error" }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "firstName": { "type": "string", "example": "John" },
        "lastName": { "type": "string", "example": "Doe" },
        "email": { "type": "string", "example": "johndoe@example.com" },
        "role": { "type": "string", "enum": ["user", "admin"], "example": "user" }
      },
      "required": ["firstName", "lastName", "email"]
    },
    "UserUpdate": {
      "type": "object",
      "properties": {
        "firstName": { "type": "string", "example": "John" },
        "lastName": { "type": "string", "example": "Doe" },
        "role": { "type": "string", "enum": ["user", "admin"], "example": "user" }
      },
      "required": ["firstName", "lastName"]
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "success": { "type": "boolean", "example": false },
        "message": { "type": "string", "example": "Invalid user ID format. Must be a 24-character hex string." }
      }
    }
  }
}
